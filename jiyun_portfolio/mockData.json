{
    "introductionData": {
        "name": "김지윤",
        "description": "안녕하세요! 제 이름은 김지윤입니다. 저는 사용자에게 최적의 경험(UX)을 제공하는 UI에 큰 관심을 갖고 여러 프론트엔드 프로젝트를 수행해 왔습니다. 이 과정에서 TypeScript를 중심으로 안정성과 코드 품질을 높이는 방법을 익혔고 백엔드 공부 경험도 있습니다. 앞으로도 사용자의 편의와 만족도를 최우선으로 고려하며 더욱 성장하는 개발자가 되겠습니다. 감사합니다."
    },
    "educationData": [
        {
            "school": "과천여자고등학교",
            "location": "경기",
            "period": "2014.03 ~ 2017.02"
        },
        {
            "school": "중앙대학교",
            "major": "공공인재학부",
            "location": "서울",
            "period": "2018.03 ~ 2024.02"
        },
        {
            "education": "국비지원교육 수료",
            "programs": [
                "멋쟁이사자처럼 프론트엔드 스쿨 (2023.07 ~ 2023.11)",
                "코드잇 스프린트 FE 단기심화 트랙 (2025.01 ~ 2025.03)"
            ]
        }
    ],
    "certificationData": [
        {
            "imageSrc": "/images/책표지.webp",
            "alt": "TypeScript Book",
            "title": "타입스크립트 책 집필",
            "description": "GitHub 링크: https://github.com/kirnjiyun/typescript-essentials, \n\n E-book 링크: https://ridibooks.com/books/2773000094?srsltid=AfmBOoqdSqJoFsamt572DFvp1x0aoO5T4FcT8ZcTesMp5_2Sd8hVffA1\n\n\n- 1. 객체 타입의 호환성: TypeScript의 구조적 타이핑을 통해, 객체의 프로퍼티와 타입이 같으면 호환될 수 있음을 설명했습니다.\n- 2. 함수 오버로딩: 같은 함수명으로 다양한 매개변수를 처리할 수 있다는 점을 예시를 통해 설명했고, 각 호출의 동작을 쉽게 이해할 수 있도록 했습니다.\n- 3. 인덱스드 엑세스: 객체의 특정 프로퍼티 타입을 추출하는 인덱스드 엑세스를 배열 인덱싱과 유사한 개념으로 설명하여, 초보자들이 쉽게 이해할 수 있도록 했습니다."
        },
        {
            "imageSrc": "/images/정보처리기사이미지.webp",
            "alt": "정보처리기사",
            "title": "정보처리기사",
            "description": "취득일: 2024.09.10"
        },
        {
            "imageSrc": "/images/sql.webp",
            "alt": "SQLD",
            "title": "SQLD (SQL 개발자 자격증)",
            "description": "취득일: 2024.06.21"
        },
        {
            "imageSrc": "/images/toeicspeaking.webp",
            "alt": "TOEIC Speaking",
            "title": "토익스피킹",
            "description": "Level: IH"
        }
    ],

    "projectsData": [
        {
            "id": 0,
            "category": "개인",
            "name": "Deluxury",
            "title": "deluxury",
            "description": "명품 브랜드 의류, 잡화 등을 판매하는 편집샵 컨셉의 사이트",
            "techStack": [
                "React",
                "Redux",
                "Styled-components",
                "React Query",
                "Node.js",
                "Express",
                "MongoDB",
                "AWS BeanStalk",
                "Axios"
            ],
            "role": ["Frontend Developer", "Backend Developer"],
            "duration": "2024-07 ~ 2024-08",
            "projectLinks": {
                "repository": [
                    "https://github.com/kirnjiyun/deluxury-FE",
                    "https://github.com/kirnjiyun/deluxury-BE"
                ],
                "deployment": "https://deluxury-jiyun.netlify.app/"
            },

            "features": [
                "음악을 들으며 다양한 명품 브랜드 제품을 구경하고 구매할 수 있는 기능 구현",
                "스크롤 기반 이미지 갤러리를 통해 매력적인 브랜드 이미지를 동적으로 체험 가능",
                "구매자 및 판매자 계정으로 가입 및 관리 기능 개발",
                "Cloudinary를 이용한 상품 이미지 업로드 및 관리 기능 구현",
                "다음 우편번호 API를 사용한 배송지 입력 기능 구현"
            ],
            "screenshots": [
                "/images/projects/deluxury/메인페이지.gif",
                "/images/projects/deluxury/상품상세.png",
                "/images/projects/deluxury/카드입력.gif",
                "/images/projects/deluxury/회원가입약관.gif"
            ],
            "thumbnail": "/images/projects/deluxury.png",
            "isMajor": true
        },

        {
            "id": 1,
            "category": "팀",
            "name": "팔북정",
            "title": "palbokjeong",
            "description": "온라인 책 검색 및 주문 서비스 프론트엔드 팀 프로젝트",
            "techStack": ["React", "React Query", "Express", "Cloudtype"],
            "role": "Frontend Developer",
            "duration": "2024-04",
            "projectLinks": {
                "repository": [
                    "https://github.com/kirnjiyun/8bookjeong",
                    "https://github.com/kirnjiyun/8bookjeong-BE"
                ],
                "deployment": "https://deluxury-jiyun.netlify.app/"
            },
            "features": [
                "Aladin API를 사용하여 책 정보 검색 및 리뷰 작성",
                "Skeleton UI를 적용하여 로딩 시간 개선",
                "반응형 UI로 다양한 디바이스 지원"
            ],
            "screenshots": [
                "/images/projects/8bookjeong/검색.gif",
                "/images/projects/8bookjeong/메인페이지 스크롤.gif",
                "/images/projects/8bookjeong/상세.gif",
                "/images/projects/8bookjeong/카테고리 .gif"
            ],
            "thumbnail": "/images/projects/book.jpg",
            "isMajor": false
        },
        {
            "id": 2,
            "category": "개인",
            "name": "yunflix",
            "title": "yunflix",
            "description": "TV, 영화, 배우 등을 검색할 수 있는 사이트입니다.",
            "techStack": [
                "React",
                "Styled-components",
                "Bootstrap",
                "@tanstack/react-query",
                "React Router",
                "Axios"
            ],
            "role": "Frontend Developer",
            "duration": "2024-02 ~ 2024-04",
            "projectLinks": {
                "deployment": "https://yunflix-global.netlify.app/",
                "repository": "https://github.com/kirnjiyun/JiyuneeNetflix"
            },
            "features": [
                "실시간 영화 및 TV 프로그램 검색",
                "YouTube API를 활용한 예고편 보기",
                "장르별 콘텐츠 탐색",
                "React Multi Carousel을 이용한 추천 콘텐츠 스크롤",
                "React Paginate로 페이지네이션 구현",
                "반응형 디자인을 통해 모바일 및 데스크톱 지원"
            ],
            "screenshots": [
                "/images/projects/yunflix/1.png",
                "/images/projects/yunflix/2.png",
                "/images/projects/yunflix/3.png",
                "/images/projects/yunflix/4.png"
            ],
            "thumbnail": "/images/projects/yunflix.png",
            "isMajor": false
        },
        {
            "id": 3,
            "category": "팀",
            "name": "Feel My Rhythm",
            "title": "feel-my-rhythm",
            "description": "감정과 음악, 그리고 사람을 연결하는 소셜 플랫폼.",
            "techStack": [
                "React",
                "JavaScript",
                "Styled-components",
                "Recoil",
                "React Query",
                "Axios",
                "React Router"
            ],
            "role": "Frontend Developer",
            "duration": "2023-10 ~ 2023-11",
            "link": "https://github.com/kirnjiyun/FeelMyRhythm",
            "features": {
                "team": [
                    "YouTube API를 사용하여 음악 검색 및 감정 공유 기능 개발",
                    "AI 감정 분석 기능으로 사용자 간 감정 공감 지원",
                    "무한 스크롤을 적용하여 사용자 경험 개선"
                ],
                "individual": [
                    "메인 페이지 UI 설계 및 구현",
                    "검색 기능 개발",
                    "다크 모드 토글 기능 지원",
                    "카테고리 박스 설계 및 스타일링",
                    "반응형 디자인으로 다양한 디바이스 지원",
                    "프로젝트 이름과 컨셉 제안 및 확정"
                ]
            },
            "screenshots": [
                "/images/projects/feel/무한스크롤최종.gif",
                "/images/projects/feel/스플래시.gif",
                "/images/projects/feel/우는표정.GIF",
                "/images/projects/feel/유튜브 영상 상세보기.gif"
            ],
            "thumbnail": "/images/projects/feelmyrhythm.png",
            "isMajor": true
        },
        {
            "id": 4,
            "category": "개인",
            "name": "득근득근 운동일기",
            "title": "workout",
            "description": "Redux로 만든 운동일기 컨셉 웹사이트",
            "techStack": ["React", "JavaScript", "Bootstrap", "Redux"],
            "role": "Frontend Developer",
            "projectLinks": {
                "deployment": "https://jiyunee-redux-diary.netlify.app/",
                "repository": "https://github.com/kirnjiyun/reduxpractice"
            },
            "features": {
                "individual": ["UI 설계 및 구현", "Redux 사용"]
            },
            "screenshots": ["/images/projects/득근득근/득근스크린샷.png"],
            "thumbnail": "/images/projects/득근득근/득근썸네일.png",
            "isMajor": false
        },
        {
            "id": 5,
            "category": "개인",
            "name": "미야오 미야오",
            "title": "meowmeow",
            "description": "귀엽고 깜찍한 컨셉의 잡화점",
            "techStack": [
                "React",
                "React Router",
                "Firebase",
                "Bootstrap",
                "React-Bootstrap",
                "Styled-Components",
                "JSON Server"
            ],
            "role": "Frontend Developer",
            "projectLinks": {
                "deployment": "https://jiyunee-meowmeowmall.netlify.app/",
                "repository": "https://github.com/kirnjiyun/meowmeowmall"
            },
            "features": {
                "individual": [
                    "로그인 아이디 abc@naver.com",
                    "비밀번호 123",
                    "React를 사용한 SPA 설계 및 구현",
                    "Firebase Authentication을 통한 사용자 인증",
                    "JSON Server를 활용한 API Mocking",
                    "Bootstrap과 React-Bootstrap을 사용한 UI 스타일링",
                    "Styled-Components로 일부 커스텀 컴포넌트 제작"
                ]
            },
            "screenshots": [
                "/images/projects/meow/meowscreen.png",
                "/images/projects/meow/meowscreen2.png"
            ],
            "thumbnail": "/images/projects/meow/meoowthumb.png",
            "isMajor": false
        },
        {
            "id": 6,
            "category": "개인",
            "name": "짱구와 가위바위보",
            "title": "rockscissorpaper",
            "description": "짱구 컨셉의 컴퓨터와 가위바위보 게임",
            "techStack": ["TypeScript", "React"],
            "role": "Frontend Developer",
            "projectLinks": {
                "deployment": "https://jiyunee-rockscissorpaper.netlify.app/",
                "repository": "https://github.com/kirnjiyun/RockScissorsPaper"
            },
            "features": {
                "individual": [
                    "TypeScript를 활용하여 안정적이고 타입 안정성을 갖춘 코드 작성",
                    "React를 사용하여 컴포넌트 기반 SPA 설계 및 구현",
                    "컴퓨터와 사용자 간의 랜덤 가위바위보 게임 로직 구현",
                    "반응형 디자인으로 모바일 및 데스크톱 최적화"
                ]
            },
            "screenshots": [
                "/images/projects/rsp/paper.png",
                "/images/projects/rsp/rock.png",
                "/images/projects/rsp/same.png",
                "/images/projects/rsp/sci.png"
            ],
            "thumbnail": "/images/projects/rsp/rspthumbnail.png",
            "isMajor": false
        },
        {
            "id": 7,
            "category": "개인",
            "name": "Weather Now",
            "title": "weathernow",
            "description": "사용자의 현재 위치를 기반으로 날씨 정보를 제공하는 애플리케이션",
            "techStack": ["TypeScript", "React", "Recoil", "Axios"],
            "role": "Frontend Developer",
            "projectLinks": {
                "deployment": "https://jiyunee-weather-now.netlify.app/",
                "repository": "https://github.com/kirnjiyun/WeatherNow"
            },
            "features": {
                "individual": [
                    "TypeScript를 사용하여 안정적이고 유지보수 가능한 코드 작성",
                    "React로 컴포넌트 기반 SPA 설계 및 구현",
                    "OpenWeatherMap API를 사용한 실시간 날씨 데이터 표시",
                    "Geolocation API를 활용하여 사용자의 현재 위치 기반 날씨 정보 제공"
                ]
            },
            "screenshots": [
                "/images/projects/weather/1.png",
                "/images/projects/weather/11.png",
                "/images/projects/weather/111.png"
            ],
            "thumbnail": "/images/projects/weather/날씨썸네일.JPG",
            "isMajor": false
        },
        {
            "id": 8,
            "category": "개인",
            "name": "LOL Champions",
            "title": "lolcham",
            "description": "League of Legends 챔피언 검색 및 정보 제공사이트",
            "techStack": ["Next.js", "TypeScript"],
            "role": "Frontend Developer",
            "projectLinks": {
                "deployment": "",
                "repository": "https://github.com/kirnjiyun/nextAppRouter"
            },
            "features": {
                "individual": [
                    "Next.js의 App Router를 사용한 라우팅 구현",
                    "TypeScript를 적용하여 안정성과 유지보수성을 향상",
                    "반응형 디자인을 통해 다양한 디바이스 환경 최적화",
                    "League of Legends API를 이용한 챔피언 검색 및 상세 정보 표시"
                ]
            },
            "screenshots": [
                "/images/projects/lol/1.png",
                "/images/projects/lol/2.png",
                "/images/projects/lol/3.png"
            ],
            "thumbnail": "/images/projects/lol/lolthumb.webp",
            "isMajor": false
        },
        {
            "id": 9,
            "category": "개인",
            "name": "Chat GPT Diet",
            "title": "chatgptdiet",
            "description": "ChatGPT와 OpenAI API를 활용한 맞춤형 다이어트 관리 서비스",
            "techStack": [
                "React",
                "JavaScript",
                "Express",
                "OpenAI API",
                "Styled-Components"
            ],
            "role": ["Frontend Developer", "Backend Developer"],
            "projectLinks": {
                "deployment": "",
                "repository": [
                    "https://github.com/kirnjiyun/chatGPTDietFront",
                    "https://github.com/kirnjiyun/chatGPTDietBack"
                ]
            },
            "features": {
                "individual": [
                    "React와 TypeScript를 사용한 안정적이고 직관적인 프론트엔드 구현",
                    "Express와 OpenAI API를 활용한 사용자 맞춤형 백엔드 개발",
                    "Styled-Components로 깔끔하고 반응형 UI 디자인"
                ]
            },
            "screenshots": [
                "/images/projects/gpt/1.png",
                "/images/projects/gpt//2.png",
                "/images/projects/gpt/3.png",
                "/images/projects/gpt/4.png"
            ],
            "thumbnail": "/images/projects/gpt/thumb.png",
            "isMajor": false
        }
    ]
}
